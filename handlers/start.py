import os

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from utils.models import Users
from utils.keyboards import registration_kb, change_status_kb, goto_btn

start_router = Router()


@start_router.callback_query(F.data == 'start')
@start_router.message(Command('start'))
async def start_handler(event: Message | CallbackQuery, state: FSMContext):
    await state.clear()
    user = Users.get_or_none(Users.user_id == event.from_user.id)
    func = event.answer if isinstance(event, Message) else event.message.edit_text

    if not user:
        return await func(f'<b>üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {event.from_user.first_name}!</b>\n\n'
                          f'ü§ñ –Ø - –±–æ—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≤–æ–¥–∏—Ç–µ–ª–µ–π\n\n'
                          f'–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é',
                          reply_markup=registration_kb(), parse_mode="HTML")
    else:
        status = ['–í –ø—É—Ç–∏ –Ω–∞ –†–¶', '–ù–∞—Ö–æ–∂—É—Å—å –Ω–∞ –†–¶', '–í —Ä–µ–π—Å–µ', '–†–∞–∑–≥—Ä—É–∂–∞—é—Å—å –Ω–∞ —Ç–æ—á–∫–µ']
        await func(f'<b>üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {event.from_user.first_name}!</b>\n\n'
                   f'ü§ñ –Ø - –±–æ—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≤–æ–¥–∏—Ç–µ–ª–µ–π\n\n'
                   f'üëâ <b>–í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status[user.status]}</b>\n\n'
                   f'<i>–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i> üëá', reply_markup=change_status_kb(user.status),
                   parse_mode="HTML")


@start_router.message(Command('admin'))
async def admin_handle(message: Message):
    url = await message.bot.create_chat_invite_link(os.getenv('CHANNEL_ID'), member_limit=1)
    await message.answer('Admin channel', reply_markup=goto_btn(url.invite_link))
